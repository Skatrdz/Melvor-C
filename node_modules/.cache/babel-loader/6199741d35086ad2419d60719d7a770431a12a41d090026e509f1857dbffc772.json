{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport xpTable from \"../willBeAppi/xpTable\";\nimport profInfo from \"../willBeAppi/profInfo\";\nimport WoodBlockReqTemp from \"../willBeAppi/WoodBlockReq(temp)\";\nconst initialState = {\n  skills: profInfo,\n  woodCuttingMastery: WoodBlockReqTemp\n};\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addExperience: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      console.log(10, obj);\n      const skillId = 1; // PLACEHOLDER\n      let exp = obj[2] ? obj[2].exp : obj[0].exp;\n      if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\n        state.skills[skillId - 1].exp += exp;\n      } else {\n        state.skills[skillId - 1].currentLvl += 1;\n        state.skills[skillId - 1].exp += exp;\n      }\n    },\n    addMastery: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      const skillId = 1; // PLACEHOLDER\n      console.log(20, obj);\n      let mastery = obj[2] ? obj[2].masteryExp : obj[0].masteryExp;\n      if (state.woodCuttingMastery[skillId - 1].masteryExp + mastery < xpTable[state.woodCuttingMastery[skillId - 1].masteryLvl - 1].masteryExp) {\n        state.woodCuttingMastery[skillId - 1].masteryExp += mastery;\n      }\n      // else {\n      //     state.woodCuttingMastery[skillId - 1].masteryLvl += 1\n      //     state.woodCuttingMastery[skillId - 1].masteryExp += mastery\n      // }\n    }\n  }\n});\n\nexport const {\n  addExperience,\n  addMastery\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","xpTable","profInfo","WoodBlockReqTemp","initialState","skills","woodCuttingMastery","expSlice","name","reducers","addExperience","state","action","obj","payload","console","log","skillId","exp","currentLvl","addMastery","mastery","masteryExp","masteryLvl","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport xpTable from \"../willBeAppi/xpTable\";\r\nimport profInfo from \"../willBeAppi/profInfo\";\r\nimport WoodBlockReqTemp from \"../willBeAppi/WoodBlockReq(temp)\";\r\nconst initialState = {\r\n    skills: profInfo,\r\n    woodCuttingMastery: WoodBlockReqTemp\r\n};\r\n\r\n\r\nexport const expSlice = createSlice({\r\n    name: \"exp\",\r\n    initialState,\r\n    reducers: {\r\n        addExperience: (state, action) => {\r\n            const {obj} = action.payload;\r\n            console.log(10, obj)\r\n            const skillId = 1 // PLACEHOLDER\r\n            let exp = obj[2] ? obj[2].exp : obj[0].exp;\r\n            if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\r\n                state.skills[skillId - 1].exp += exp\r\n            } else {\r\n                state.skills[skillId - 1].currentLvl += 1\r\n                state.skills[skillId - 1].exp += exp\r\n            }\r\n        },\r\n        addMastery: (state, action) => {\r\n            const {obj} = action.payload;\r\n            const skillId = 1 // PLACEHOLDER\r\n            console.log(20, obj)\r\n            let mastery = obj[2] ? obj[2].masteryExp : obj[0].masteryExp;\r\n             if (state.woodCuttingMastery[skillId - 1].masteryExp + mastery < xpTable[state.woodCuttingMastery[skillId - 1].masteryLvl - 1].masteryExp) {\r\n                 state.woodCuttingMastery[skillId - 1].masteryExp += mastery\r\n            }\r\n            // else {\r\n            //     state.woodCuttingMastery[skillId - 1].masteryLvl += 1\r\n            //     state.woodCuttingMastery[skillId - 1].masteryExp += mastery\r\n            // }\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const { addExperience, addMastery} = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"AACA,SAASA,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,EAAEC,OAAO,QAAS,kBAAkB;AACxD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEH,QAAQ;EAChBI,kBAAkB,EAAEH;AACxB,CAAC;AAGD,OAAO,MAAMI,QAAQ,GAAGR,WAAW,CAAC;EAChCS,IAAI,EAAE,KAAK;EACXJ,YAAY;EACZK,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAACC;MAAG,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC5BC,OAAO,CAACC,GAAG,CAAC,EAAE,EAAEH,GAAG,CAAC;MACpB,MAAMI,OAAO,GAAG,CAAC,EAAC;MAClB,IAAIC,GAAG,GAAGL,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACK,GAAG,GAAGL,GAAG,CAAC,CAAC,CAAC,CAACK,GAAG;MAC1C,IAAIP,KAAK,CAACN,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,GAAGA,GAAG,GAAGjB,OAAO,CAACU,KAAK,CAACN,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACE,UAAU,GAAG,CAAC,CAAC,CAACD,GAAG,EAAE;QAC7FP,KAAK,CAACN,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;MACxC,CAAC,MAAM;QACHP,KAAK,CAACN,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACE,UAAU,IAAI,CAAC;QACzCR,KAAK,CAACN,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;MACxC;IACJ,CAAC;IACDE,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAACC;MAAG,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC5B,MAAMG,OAAO,GAAG,CAAC,EAAC;MAClBF,OAAO,CAACC,GAAG,CAAC,EAAE,EAAEH,GAAG,CAAC;MACpB,IAAIQ,OAAO,GAAGR,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,GAAGT,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU;MAC3D,IAAIX,KAAK,CAACL,kBAAkB,CAACW,OAAO,GAAG,CAAC,CAAC,CAACK,UAAU,GAAGD,OAAO,GAAGpB,OAAO,CAACU,KAAK,CAACL,kBAAkB,CAACW,OAAO,GAAG,CAAC,CAAC,CAACM,UAAU,GAAG,CAAC,CAAC,CAACD,UAAU,EAAE;QACvIX,KAAK,CAACL,kBAAkB,CAACW,OAAO,GAAG,CAAC,CAAC,CAACK,UAAU,IAAID,OAAO;MAChE;MACA;MACA;MACA;MACA;IACJ;EACJ;AAEJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEX,aAAa;EAAEU;AAAU,CAAC,GAAGb,QAAQ,CAACiB,OAAO;AAC5D,eAAejB,QAAQ,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}