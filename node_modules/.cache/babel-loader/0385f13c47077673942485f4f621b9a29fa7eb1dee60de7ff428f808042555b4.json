{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport xpTable from \"../willBeAppi/xpTable\";\nimport profInfo from \"../willBeAppi/profInfo\";\nconst initialState = {\n  skills: profInfo\n};\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addExperience: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      const skillId = 1; // PLACEHOLDER\n      let exp;\n      if (obj.length === 1) {\n        exp = obj[0].exp;\n      } else if (obj.length === 2) {\n        console.log(Math.floor(obj[0].actionTime / obj[1].actionTime) * obj[1].exp);\n        console.log(obj[1].exp, obj[1].actionTime, obj[0].actionTime);\n        exp = obj[0].exp + Math.floor(obj[0].actionTime / obj[1].actionTime) * obj[1].exp;\n      }\n      console.log(exp);\n      if (state.skills[skillId - 1].exp < xpTable[skillId - 1].exp) {\n        state.skills[skillId - 1].exp += exp;\n      } else {\n        console.log(state.skills[skillId - 1].lvl);\n        state.skills[skillId - 1].lvl += 1;\n        state.skills[skillId - 1].exp += exp;\n      }\n      // console.log(skillId)\n      // if (obj.length === 1) {\n      //     console.log(obj[0].exp)\n      //     state.skills[skillId-1].exp += obj[0].exp\n      // }\n      // else if (obj.length === 2){\n      //     state.skills[skillId-1].exp += obj[0].exp + obj[1].exp\n      // }\n    },\n\n    addLvl: (state, action) => {\n      const {\n        exp,\n        skillId\n      } = action.payload;\n      state.skills[skillId - 1].exp += exp;\n    }\n  }\n});\nexport const {\n  addExperience\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","xpTable","profInfo","initialState","skills","expSlice","name","reducers","addExperience","state","action","obj","payload","skillId","exp","length","console","log","Math","floor","actionTime","lvl","addLvl","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport xpTable from \"../willBeAppi/xpTable\";\r\nimport profInfo from \"../willBeAppi/profInfo\";\r\nconst initialState = {\r\n    skills: profInfo,\r\n};\r\n\r\n\r\nexport const expSlice = createSlice({\r\n    name: \"exp\",\r\n    initialState,\r\n    reducers: {\r\n        addExperience: (state, action) => {\r\n            const { obj } = action.payload;\r\n            const skillId = 1 // PLACEHOLDER\r\n            let exp;\r\n\r\n            if (obj.length === 1){\r\n                exp = obj[0].exp;\r\n            }\r\n            else if (obj.length === 2){\r\n                console.log(Math.floor(obj[0].actionTime / obj[1].actionTime) * obj[1].exp)\r\n                console.log(obj[1].exp, obj[1].actionTime, obj[0].actionTime)\r\n                exp = obj[0].exp +\r\n                    Math.floor(obj[0].actionTime / obj[1].actionTime) * obj[1].exp\r\n            }\r\n            console.log(exp)\r\n            if (state.skills[skillId-1].exp < xpTable[skillId-1].exp){\r\n                state.skills[skillId-1].exp += exp\r\n            }\r\n            else {\r\n                console.log(state.skills[skillId-1].lvl)\r\n                state.skills[skillId-1].lvl += 1\r\n                state.skills[skillId-1].exp += exp\r\n            }\r\n            // console.log(skillId)\r\n            // if (obj.length === 1) {\r\n            //     console.log(obj[0].exp)\r\n            //     state.skills[skillId-1].exp += obj[0].exp\r\n            // }\r\n            // else if (obj.length === 2){\r\n            //     state.skills[skillId-1].exp += obj[0].exp + obj[1].exp\r\n            // }\r\n\r\n\r\n\r\n\r\n        },\r\n        addLvl: (state, action) => {\r\n            const { exp, skillId } = action.payload;\r\n            state.skills[skillId-1].exp += exp;\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addExperience } = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"AACA,SAASA,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,EAAEC,OAAO,QAAS,kBAAkB;AACxD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEF;AACZ,CAAC;AAGD,OAAO,MAAMG,QAAQ,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,KAAK;EACXH,YAAY;EACZI,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAAEC;MAAI,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,OAAO,GAAG,CAAC,EAAC;MAClB,IAAIC,GAAG;MAEP,IAAIH,GAAG,CAACI,MAAM,KAAK,CAAC,EAAC;QACjBD,GAAG,GAAGH,GAAG,CAAC,CAAC,CAAC,CAACG,GAAG;MACpB,CAAC,MACI,IAAIH,GAAG,CAACI,MAAM,KAAK,CAAC,EAAC;QACtBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACR,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,GAAGT,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,CAAC,GAAGT,GAAG,CAAC,CAAC,CAAC,CAACG,GAAG,CAAC;QAC3EE,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC,CAAC,CAAC,CAACG,GAAG,EAAEH,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,EAAET,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,CAAC;QAC7DN,GAAG,GAAGH,GAAG,CAAC,CAAC,CAAC,CAACG,GAAG,GACZI,IAAI,CAACC,KAAK,CAACR,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,GAAGT,GAAG,CAAC,CAAC,CAAC,CAACS,UAAU,CAAC,GAAGT,GAAG,CAAC,CAAC,CAAC,CAACG,GAAG;MACtE;MACAE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,IAAIL,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACC,GAAG,GAAGb,OAAO,CAACY,OAAO,GAAC,CAAC,CAAC,CAACC,GAAG,EAAC;QACrDL,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;MACtC,CAAC,MACI;QACDE,OAAO,CAACC,GAAG,CAACR,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACQ,GAAG,CAAC;QACxCZ,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACQ,GAAG,IAAI,CAAC;QAChCZ,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;MACtC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAKJ,CAAC;;IACDQ,MAAM,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MACvB,MAAM;QAAEI,GAAG;QAAED;MAAQ,CAAC,GAAGH,MAAM,CAACE,OAAO;MACvCH,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;IAEtC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN;AAAc,CAAC,GAAGH,QAAQ,CAACkB,OAAO;AACjD,eAAelB,QAAQ,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}