{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport xpTable from \"../willBeAppi/xpTable\";\nimport profInfo from \"../willBeAppi/profInfo\";\nconst initialState = {\n  skills: profInfo\n};\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addExperience: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      const skillId = obj[0].id;\n      // if (obj.length === 1){\n      //     state.skills[skillId-1].exp += obj[0].exp;\n      // }\n      // if (obj.length === 2){\n      //     console.log(Math.floor(obj[0].actionTime / obj[1].actionTime) * obj[1].exp)\n      //     console.log(obj[1].exp, obj[1].actionTime, obj[0].actionTime)\n      //     state.skills[skillId-1].exp += obj[0].exp +\n      //         Math.floor(ob\n      //         j[0].actionTime / obj[1].actionTime) * obj[1].exp\n      // }\n\n      // state.skills[skillId-1].exp += exp\n    },\n\n    addLvl: (state, action) => {\n      const {\n        exp,\n        skillId\n      } = action.payload;\n      state.skills[skillId - 1].exp += exp;\n    }\n  }\n});\nexport const {\n  addExperience\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","xpTable","profInfo","initialState","skills","expSlice","name","reducers","addExperience","state","action","obj","payload","skillId","id","addLvl","exp","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport xpTable from \"../willBeAppi/xpTable\";\r\nimport profInfo from \"../willBeAppi/profInfo\";\r\nconst initialState = {\r\n    skills: profInfo,\r\n};\r\n\r\n\r\nexport const expSlice = createSlice({\r\n    name: \"exp\",\r\n    initialState,\r\n    reducers: {\r\n        addExperience: (state, action) => {\r\n            const { obj } = action.payload;\r\n            const skillId = obj[0].id\r\n            // if (obj.length === 1){\r\n            //     state.skills[skillId-1].exp += obj[0].exp;\r\n            // }\r\n            // if (obj.length === 2){\r\n            //     console.log(Math.floor(obj[0].actionTime / obj[1].actionTime) * obj[1].exp)\r\n            //     console.log(obj[1].exp, obj[1].actionTime, obj[0].actionTime)\r\n            //     state.skills[skillId-1].exp += obj[0].exp +\r\n            //         Math.floor(ob\r\n            //         j[0].actionTime / obj[1].actionTime) * obj[1].exp\r\n            // }\r\n\r\n            // state.skills[skillId-1].exp += exp\r\n\r\n\r\n\r\n        },\r\n        addLvl: (state, action) => {\r\n            const { exp, skillId } = action.payload;\r\n            state.skills[skillId-1].exp += exp;\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addExperience } = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"AACA,SAASA,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,EAAEC,OAAO,QAAS,kBAAkB;AACxD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEF;AACZ,CAAC;AAGD,OAAO,MAAMG,QAAQ,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,KAAK;EACXH,YAAY;EACZI,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAAEC;MAAI,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,OAAO,GAAGF,GAAG,CAAC,CAAC,CAAC,CAACG,EAAE;MACzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;IAIJ,CAAC;;IACDC,MAAM,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACvB,MAAM;QAAEM,GAAG;QAAEH;MAAQ,CAAC,GAAGH,MAAM,CAACE,OAAO;MACvCH,KAAK,CAACL,MAAM,CAACS,OAAO,GAAC,CAAC,CAAC,CAACG,GAAG,IAAIA,GAAG;IAEtC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAc,CAAC,GAAGH,QAAQ,CAACY,OAAO;AACjD,eAAeZ,QAAQ,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}