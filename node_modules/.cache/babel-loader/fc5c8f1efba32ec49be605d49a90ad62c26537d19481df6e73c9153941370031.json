{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport xpTable from \"../willBeAppi/xpTable\";\nimport profInfo from \"../willBeAppi/profInfo\";\nconst initialState = {\n  skills: profInfo\n};\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addExperience: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      console.log(obj);\n      const skillId = 1; // PLACEHOLDER\n      let exp = obj[2] ? obj[2].exp : obj[0].exp;\n      if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\n        state.skills[skillId - 1].exp += exp;\n      } else {\n        state.skills[skillId - 1].currentLvl += 1;\n        state.skills[skillId - 1].exp += exp;\n      }\n    },\n    addLvl: (state, action) => {\n      const {\n        exp,\n        skillId\n      } = action.payload;\n      state.skills[skillId - 1].exp += exp;\n    },\n    addMastery: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      const skillId = 1; // PLACEHOLDER\n      let mastery = obj[2] ? obj[2].mastery : obj[0].mastery;\n      if (state.skills[skillId - 1].mastery + mastery < xpTable[state.skills[skillId - 1].currentLvl - 1].mastery) {\n        state.skills[skillId - 1].mastery += mastery;\n      } else {\n        state.skills[skillId - 1].currentLvl += 1;\n        state.skills[skillId - 1].mastery += mastery;\n      }\n    }\n  }\n});\nexport const {\n  addExperience\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","xpTable","profInfo","initialState","skills","expSlice","name","reducers","addExperience","state","action","obj","payload","console","log","skillId","exp","currentLvl","addLvl","addMastery","mastery","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport xpTable from \"../willBeAppi/xpTable\";\r\nimport profInfo from \"../willBeAppi/profInfo\";\r\nconst initialState = {\r\n    skills: profInfo,\r\n};\r\n\r\n\r\nexport const expSlice = createSlice({\r\n    name: \"exp\",\r\n    initialState,\r\n    reducers: {\r\n        addExperience: (state, action) => {\r\n            const {obj} = action.payload;\r\n            console.log(obj)\r\n            const skillId = 1 // PLACEHOLDER\r\n            let exp = obj[2] ? obj[2].exp : obj[0].exp;\r\n            if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\r\n                state.skills[skillId - 1].exp += exp\r\n            } else {\r\n                state.skills[skillId - 1].currentLvl += 1\r\n                state.skills[skillId - 1].exp += exp\r\n            }\r\n        },\r\n        addLvl: (state, action) => {\r\n            const {exp, skillId} = action.payload;\r\n            state.skills[skillId - 1].exp += exp;\r\n        },\r\n        addMastery: (state, action) => {\r\n            const {obj} = action.payload;\r\n            const skillId = 1 // PLACEHOLDER\r\n            let mastery = obj[2] ? obj[2].mastery : obj[0].mastery;\r\n            if (state.skills[skillId - 1].mastery + mastery < xpTable[state.skills[skillId - 1].currentLvl - 1].mastery) {\r\n                state.skills[skillId - 1].mastery += mastery\r\n            } else {\r\n                state.skills[skillId - 1].currentLvl += 1\r\n                state.skills[skillId - 1].mastery += mastery\r\n            }\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const { addExperience } = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"AACA,SAASA,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,EAAEC,OAAO,QAAS,kBAAkB;AACxD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEF;AACZ,CAAC;AAGD,OAAO,MAAMG,QAAQ,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,KAAK;EACXH,YAAY;EACZI,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAACC;MAAG,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC5BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,MAAMI,OAAO,GAAG,CAAC,EAAC;MAClB,IAAIC,GAAG,GAAGL,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACK,GAAG,GAAGL,GAAG,CAAC,CAAC,CAAC,CAACK,GAAG;MAC1C,IAAIP,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,GAAGA,GAAG,GAAGf,OAAO,CAACQ,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACE,UAAU,GAAG,CAAC,CAAC,CAACD,GAAG,EAAE;QAC7FP,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;MACxC,CAAC,MAAM;QACHP,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACE,UAAU,IAAI,CAAC;QACzCR,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;MACxC;IACJ,CAAC;IACDE,MAAM,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACvB,MAAM;QAACM,GAAG;QAAED;MAAO,CAAC,GAAGL,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACC,GAAG,IAAIA,GAAG;IACxC,CAAC;IACDG,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAACC;MAAG,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC5B,MAAMG,OAAO,GAAG,CAAC,EAAC;MAClB,IAAIK,OAAO,GAAGT,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACS,OAAO,GAAGT,GAAG,CAAC,CAAC,CAAC,CAACS,OAAO;MACtD,IAAIX,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACK,OAAO,GAAGA,OAAO,GAAGnB,OAAO,CAACQ,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACE,UAAU,GAAG,CAAC,CAAC,CAACG,OAAO,EAAE;QACzGX,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACK,OAAO,IAAIA,OAAO;MAChD,CAAC,MAAM;QACHX,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACE,UAAU,IAAI,CAAC;QACzCR,KAAK,CAACL,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAACK,OAAO,IAAIA,OAAO;MAChD;IACJ;EACJ;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ;AAAc,CAAC,GAAGH,QAAQ,CAACgB,OAAO;AACjD,eAAehB,QAAQ,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}