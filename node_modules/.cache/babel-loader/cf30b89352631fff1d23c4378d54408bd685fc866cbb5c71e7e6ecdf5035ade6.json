{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Name\\\\WebstormProjects\\\\untitled\\\\my-app\\\\src\\\\components\\\\main\\\\prof\\\\woodcutting\\\\woodProgress.js\",\n  _s = $RefreshSig$();\nimport LinearProgress from '@mui/material/LinearProgress';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addExperience } from \"../../../../store/expReducer\";\nimport progressBar from \"../allProf/progressBar\";\nimport WoodCuttingGrants from \"./woodCuttingGrants\";\nimport xpTable from \"../../../../willBeAppi/xpTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WoodProgress() {\n  _s();\n  const dispatch = useDispatch();\n  const currentAction = useSelector(state => state.woodCutting.actionArr);\n  const [exp, setExp] = React.useState(currentAction ? 0 : currentAction[0].exp);\n  const addExp = () => {\n    dispatch(addExperience({\n      obj: currentAction\n    }));\n  };\n  useEffect(() => {\n    if (currentAction[0]) {\n      const interval = setInterval(() => {\n        addExp();\n      }, currentAction[0].actionTime * 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [currentAction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wood-progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wood-progress-animation wood-progress-bar-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wood-progress-bar-animation\",\n        style: {\n          animation: currentAction[0] ? `progressAnimation ${currentAction[0].actionTime}s infinite linear` : \"none\"\n        }\n      }, currentAction[0] ? currentAction[0].actionTime : \"default\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), currentAction[0] ? /*#__PURE__*/_jsxDEV(WoodCuttingGrants, {\n      currentAction: currentAction,\n      exp: currentAction[2] ? currentAction[2].exp : currentAction[0].exp,\n      count: currentAction[2] ? currentAction[2].count : null,\n      mastery: [2, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"info will display here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(WoodProgress, \"Vvi+AQmbJjtAC1gxqB/XI2s2gtM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = WoodProgress;\nexport default WoodProgress;\nvar _c;\n$RefreshReg$(_c, \"WoodProgress\");","map":{"version":3,"names":["LinearProgress","React","useEffect","useState","useDispatch","useSelector","addExperience","progressBar","WoodCuttingGrants","xpTable","jsxDEV","_jsxDEV","WoodProgress","_s","dispatch","currentAction","state","woodCutting","actionArr","exp","setExp","addExp","obj","interval","setInterval","actionTime","clearInterval","className","children","style","animation","fileName","_jsxFileName","lineNumber","columnNumber","count","mastery","_c","$RefreshReg$"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/components/main/prof/woodcutting/woodProgress.js"],"sourcesContent":["import LinearProgress from '@mui/material/LinearProgress';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { addExperience } from \"../../../../store/expReducer\";\r\nimport progressBar from \"../allProf/progressBar\";\r\nimport WoodCuttingGrants from \"./woodCuttingGrants\";\r\nimport xpTable from \"../../../../willBeAppi/xpTable\";\r\nfunction WoodProgress() {\r\n    const dispatch = useDispatch()\r\n\r\n    const currentAction = useSelector(\r\n        (state) => state.woodCutting.actionArr)\r\n\r\n    const [exp, setExp] = React.useState(currentAction ? 0 : currentAction[0].exp)\r\n    const addExp = () => {\r\n        dispatch(addExperience({ obj: currentAction }));\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (currentAction[0]) {\r\n            const interval = setInterval(() => {\r\n\r\n                addExp();\r\n\r\n            }, currentAction[0].actionTime * 1000);\r\n\r\n            return () => {\r\n                clearInterval(interval);\r\n            };\r\n        }\r\n    }, [currentAction]);\r\n\r\n\r\n    return (\r\n        <div className=\"wood-progress\">\r\n\r\n            <div className=\"wood-progress-animation wood-progress-bar-animation\">\r\n                    <div className=\"wood-progress-bar-animation\"\r\n                     style={{\r\n                    animation: currentAction[0]\r\n                        ? `progressAnimation ${currentAction[0].actionTime}s infinite linear`\r\n                        : \"none\",\r\n                }}\r\n                         key={currentAction[0] ? currentAction[0].actionTime : \"default\"}\r\n                >\r\n\r\n                </div>\r\n            </div>\r\n            { currentAction[0]\r\n                ?\r\n            <WoodCuttingGrants\r\n                currentAction={currentAction}\r\n                exp = {currentAction[2] ? currentAction[2].exp: currentAction[0].exp}\r\n                count = {currentAction[2] ? currentAction[2].count : null}\r\n                mastery = {[2, 10]}\r\n\r\n            ></WoodCuttingGrants>\r\n                :\r\n                <h1>info will display here</h1>\r\n            }\r\n                 </div>\r\n    );\r\n}\r\n\r\nexport default WoodProgress;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}