{"ast":null,"code":"import App from \"../App\";\nimport pveInfo from \"../components/navbar/pveInfo\";\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  skills: pveInfo\n};\nconst skillsReducer = createReducer(initialState, builder => {\n  builder.addCase(increaseLevel, (state, action) => {\n    const {\n      skillId\n    } = action.payload;\n    console.log(action.payload); // Log the payload\n    state.skills = state.skills.map(skill => skill.id === skillId ? {\n      ...skill,\n      currentLvl: skill.currentLvl + 1\n    } : skill);\n  }).addCase(addExperience, (state, action) => {\n    const {\n      skillId,\n      exp\n    } = action.payload;\n    console.log(action.payload); // Log the payload\n    state.skills = state.skills.map(skill => skill.id === skillId ? {\n      ...skill,\n      exp: skill.exp + exp\n    } : skill);\n  });\n});\nexport const {\n  addExperience,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default skillsReducer;","map":{"version":3,"names":["App","pveInfo","createReducer","createAction","createSlice","initialState","skills","skillsReducer","builder","addCase","increaseLevel","state","action","skillId","payload","console","log","map","skill","id","currentLvl","addExperience","exp","decrement","incrementByAmount","counterSlice","actions"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["import App from \"../App\";\r\nimport pveInfo from \"../components/navbar/pveInfo\";\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    skills: pveInfo,\r\n};\r\n\r\n\r\n\r\nconst skillsReducer = createReducer(initialState, (builder) => {\r\n    builder\r\n        .addCase(increaseLevel, (state, action) => {\r\n            const { skillId } = action.payload;\r\n            console.log(action.payload); // Log the payload\r\n            state.skills = state.skills.map((skill) =>\r\n                skill.id === skillId\r\n                    ? { ...skill, currentLvl: skill.currentLvl + 1 }\r\n                    : skill\r\n            );\r\n        })\r\n        .addCase(addExperience, (state, action) => {\r\n            const { skillId, exp } = action.payload;\r\n            console.log(action.payload); // Log the payload\r\n            state.skills = state.skills.map((skill) =>\r\n                skill.id === skillId ? { ...skill, exp: skill.exp + exp } : skill\r\n            );\r\n        });\r\n});\r\n\r\nexport const { addExperience, decrement, incrementByAmount } = counterSlice.actions\r\nexport default skillsReducer;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,QAAQ;AACxB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEL;AACZ,CAAC;AAID,MAAMM,aAAa,GAAGL,aAAa,CAACG,YAAY,EAAGG,OAAO,IAAK;EAC3DA,OAAO,CACFC,OAAO,CAACC,aAAa,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACvC,MAAM;MAAEC;IAAQ,CAAC,GAAGD,MAAM,CAACE,OAAO;IAClCC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;IAC7BH,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,CAACW,GAAG,CAAEC,KAAK,IAClCA,KAAK,CAACC,EAAE,KAAKN,OAAO,GACd;MAAE,GAAGK,KAAK;MAAEE,UAAU,EAAEF,KAAK,CAACE,UAAU,GAAG;IAAE,CAAC,GAC9CF,KACV,CAAC;EACL,CAAC,CAAC,CACDT,OAAO,CAACY,aAAa,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;IACvC,MAAM;MAAEC,OAAO;MAAES;IAAI,CAAC,GAAGV,MAAM,CAACE,OAAO;IACvCC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;IAC7BH,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,CAACW,GAAG,CAAEC,KAAK,IAClCA,KAAK,CAACC,EAAE,KAAKN,OAAO,GAAG;MAAE,GAAGK,KAAK;MAAEI,GAAG,EAAEJ,KAAK,CAACI,GAAG,GAAGA;IAAI,CAAC,GAAGJ,KAChE,CAAC;EACL,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,aAAa;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGC,YAAY,CAACC,OAAO;AACnF,eAAenB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}