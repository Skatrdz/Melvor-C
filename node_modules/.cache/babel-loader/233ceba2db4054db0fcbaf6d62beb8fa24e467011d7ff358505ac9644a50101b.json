{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport woodCutting from \"../../willBeAppi/contentManager/woodCuttingAction\";\nconst initialState = {\n  actionArr: woodCutting\n};\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addWood: (state, action) => {\n      const {\n        id,\n        actionTime,\n        exp\n      } = action.payload;\n      state.actionArr.push({\n        id,\n        actionTime,\n        exp\n      });\n      state.actionArr.sort((a, b) => b.actionTime - a.actionTime);\n      const bothExp = state.actionArr[0].exp + Math.floor(state.actionArr[0].actionTime / state.actionArr[1].actionTime) * state.actionArr[1].exp;\n      state.actionArr.push({\n        bothExp\n      });\n    },\n    deleteWood: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      state.actionArr = state.actionArr.filter(item => item.id !== id);\n    }\n  }\n});\nexport const {\n  deleteWood,\n  addWood\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","woodCutting","initialState","actionArr","expSlice","name","reducers","addWood","state","action","id","actionTime","exp","payload","push","sort","a","b","bothExp","Math","floor","deleteWood","filter","item","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/blocksReducers/woodCuttingReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport woodCutting from \"../../willBeAppi/contentManager/woodCuttingAction\";\r\n\r\nconst initialState = {\r\n    actionArr: woodCutting,\r\n\r\n};\r\n\r\n\r\nexport const expSlice = createSlice({\r\n    name: \"exp\",\r\n    initialState,\r\n    reducers: {\r\n        addWood: (state, action) => {\r\n            const { id,  actionTime, exp, } = action.payload;\r\n            state.actionArr.push({id, actionTime, exp})\r\n            state.actionArr.sort((a, b) => b.actionTime - a.actionTime);\r\n            const bothExp = state.actionArr[0].exp +\r\n                Math.floor(state.actionArr[0].actionTime / state.actionArr[1].actionTime) * state.actionArr[1].exp\r\n            state.actionArr.push({bothExp})\r\n        },\r\n        deleteWood: (state, action) => {\r\n            const { id } = action.payload;\r\n            state.actionArr = state.actionArr.filter(item => item.id !== id);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { deleteWood, addWood } = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"AACA,SAASA,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAC9D,SAASC,WAAW,EAAEC,OAAO,QAAS,kBAAkB;AACxD,OAAOC,WAAW,MAAM,mDAAmD;AAE3E,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAEF;AAEf,CAAC;AAGD,OAAO,MAAMG,QAAQ,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,KAAK;EACXH,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAM;QAAEC,EAAE;QAAGC,UAAU;QAAEC;MAAK,CAAC,GAAGH,MAAM,CAACI,OAAO;MAChDL,KAAK,CAACL,SAAS,CAACW,IAAI,CAAC;QAACJ,EAAE;QAAEC,UAAU;QAAEC;MAAG,CAAC,CAAC;MAC3CJ,KAAK,CAACL,SAAS,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACN,UAAU,GAAGK,CAAC,CAACL,UAAU,CAAC;MAC3D,MAAMO,OAAO,GAAGV,KAAK,CAACL,SAAS,CAAC,CAAC,CAAC,CAACS,GAAG,GAClCO,IAAI,CAACC,KAAK,CAACZ,KAAK,CAACL,SAAS,CAAC,CAAC,CAAC,CAACQ,UAAU,GAAGH,KAAK,CAACL,SAAS,CAAC,CAAC,CAAC,CAACQ,UAAU,CAAC,GAAGH,KAAK,CAACL,SAAS,CAAC,CAAC,CAAC,CAACS,GAAG;MACtGJ,KAAK,CAACL,SAAS,CAACW,IAAI,CAAC;QAACI;MAAO,CAAC,CAAC;IACnC,CAAC;IACDG,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEC;MAAG,CAAC,GAAGD,MAAM,CAACI,OAAO;MAC7BL,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACmB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC;IACpE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEW,UAAU;EAAEd;AAAQ,CAAC,GAAGH,QAAQ,CAACoB,OAAO;AACvD,eAAepB,QAAQ,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}