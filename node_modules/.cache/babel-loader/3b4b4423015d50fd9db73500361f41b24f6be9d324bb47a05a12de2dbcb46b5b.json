{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Name\\\\WebstormProjects\\\\untitled\\\\my-app\\\\src\\\\components\\\\main\\\\prof\\\\LinearCheck.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LinearCheck() {\n  _s();\n  const [countOfProgress, setCountOfProgress] = React.useState(0);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setCountOfProgress(oldProgress => {\n        if (100 === oldProgress) return 0;\n        return Math.min(oldProgress + Math.random() * 10, 100);\n      });\n    }, 499);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"How to show LinearProgress in ReactJS?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: countOfProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(LinearCheck, \"yHaHn1RTQH0gkJ2Df7ozfPsbNq4=\");\n_c = LinearCheck;\nvar _c;\n$RefreshReg$(_c, \"LinearCheck\");","map":{"version":3,"names":["React","LinearProgress","jsxDEV","_jsxDEV","LinearCheck","_s","countOfProgress","setCountOfProgress","useState","useEffect","timer","setInterval","oldProgress","Math","min","random","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","value","_c","$RefreshReg$"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/components/main/prof/LinearCheck.js"],"sourcesContent":["import React from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nexport default function LinearCheck() {\r\n    const [countOfProgress,\r\n        setCountOfProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setCountOfProgress((oldProgress) => {\r\n                if (100 === oldProgress) return 0;\r\n                return Math.min(oldProgress + Math.random() * 10, 100);\r\n            });\r\n        }, 499);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h4>How to show LinearProgress in ReactJS?</h4>\r\n            <LinearProgress variant=\"determinate\"\r\n                            value={countOfProgress} />\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAClBC,kBAAkB,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAE3CR,KAAK,CAACS,SAAS,CAAC,MAAM;IAClB,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BJ,kBAAkB,CAAEK,WAAW,IAAK;QAChC,IAAI,GAAG,KAAKA,WAAW,EAAE,OAAO,CAAC;QACjC,OAAOC,IAAI,CAACC,GAAG,CAACF,WAAW,GAAGC,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACTC,aAAa,CAACN,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/ClB,OAAA,CAACF,cAAc;MAACqB,OAAO,EAAC,aAAa;MACrBC,KAAK,EAAEjB;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd;AAAChB,EAAA,CAxBuBD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}