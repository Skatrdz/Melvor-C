{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport xpTable from \"../willBeAppi/xpTable\";\nimport profInfo from \"../willBeAppi/profInfo\";\nimport WoodBlockReqTemp from \"../willBeAppi/WoodBlockReq(temp)\";\nconst initialState = {\n  skills: profInfo,\n  woodCuttingMastery: WoodBlockReqTemp\n};\nfunction masteryLvl(currentExp, Exp, Lvl) {\n  console.log(currentExp + Exp, xpTable[Lvl - 1].exp);\n  console.log(typeof xpTable[Lvl - 1].exp);\n  console.log(10000529 < 1358);\n  return currentExp + Exp < xpTable[Lvl - 1].exp;\n}\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addExperience: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      console.log(10, obj);\n      const skillId = 1; // PLACEHOLDER\n      let exp = obj[2] ? obj[2].exp : obj[0].exp;\n      if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\n        state.skills[skillId - 1].exp += exp;\n      } else {\n        state.skills[skillId - 1].currentLvl += 1;\n        state.skills[skillId - 1].exp += exp;\n      }\n    },\n    addMastery: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      const skillId = 1; // PLACEHOLDER\n      console.log(20, obj);\n      state.woodCuttingMastery[obj[0].id - 1].masteryExp += state.woodCuttingMastery[obj[0].id - 1].mastery * 2;\n      if (masteryLvl(state.woodCuttingMastery[obj[0].id - 1].masteryExp, 10000000, state.woodCuttingMastery[obj[0].id - 1].mastery)) {\n        state.woodCuttingMastery[obj[0].id - 1].masteryExp += state.woodCuttingMastery[obj[0].id - 1].mastery * 2;\n      } else {\n        state.woodCuttingMastery[obj[0].id - 1].mastery += 1;\n        state.woodCuttingMastery[obj[0].id - 1].masteryExp += state.woodCuttingMastery[obj[0].id - 1].mastery * 2;\n      }\n      if (obj.length === 3) {\n        state.woodCuttingMastery[obj[1].id - 1].masteryExp += state.woodCuttingMastery[obj[1].id - 1].mastery * 2;\n      }\n    }\n  }\n});\nexport const {\n  addExperience,\n  addMastery\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","xpTable","profInfo","WoodBlockReqTemp","initialState","skills","woodCuttingMastery","masteryLvl","currentExp","Exp","Lvl","console","log","exp","expSlice","name","reducers","addExperience","state","action","obj","payload","skillId","currentLvl","addMastery","id","masteryExp","mastery","length","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport xpTable from \"../willBeAppi/xpTable\";\r\nimport profInfo from \"../willBeAppi/profInfo\";\r\nimport WoodBlockReqTemp from \"../willBeAppi/WoodBlockReq(temp)\";\r\nconst initialState = {\r\n    skills: profInfo,\r\n    woodCuttingMastery: WoodBlockReqTemp\r\n};\r\n\r\nfunction masteryLvl(currentExp, Exp, Lvl) {\r\n    console.log(currentExp + Exp, xpTable[Lvl - 1].exp)\r\n    console.log(typeof(xpTable[Lvl - 1].exp))\r\n    console.log(10000529  < 1358)\r\n\r\n    return currentExp + Exp < xpTable[Lvl - 1].exp;\r\n}\r\n\r\n\r\n    export const expSlice = createSlice({\r\n        name: \"exp\",\r\n        initialState,\r\n        reducers: {\r\n            addExperience: (state, action) => {\r\n                const {obj} = action.payload;\r\n                console.log(10, obj)\r\n                const skillId = 1 // PLACEHOLDER\r\n                let exp = obj[2] ? obj[2].exp : obj[0].exp;\r\n                if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\r\n                    state.skills[skillId - 1].exp += exp\r\n                } else {\r\n                    state.skills[skillId - 1].currentLvl += 1\r\n                    state.skills[skillId - 1].exp += exp\r\n                }\r\n            },\r\n            addMastery: (state, action) => {\r\n                const {obj} = action.payload;\r\n                const skillId = 1 // PLACEHOLDER\r\n                console.log(20, obj)\r\n                state.woodCuttingMastery[obj[0].id - 1].masteryExp += state.woodCuttingMastery[obj[0].id - 1].mastery * 2\r\n                if (masteryLvl(state.woodCuttingMastery[obj[0].id - 1].masteryExp, 10000000, state.woodCuttingMastery[obj[0].id - 1].mastery)){\r\n                    state.woodCuttingMastery[obj[0].id - 1].masteryExp += state.woodCuttingMastery[obj[0].id - 1].mastery * 2\r\n                }\r\n                else {\r\n                    state.woodCuttingMastery[obj[0].id - 1].mastery += 1\r\n                    state.woodCuttingMastery[obj[0].id - 1].masteryExp += state.woodCuttingMastery[obj[0].id - 1].mastery * 2\r\n                }\r\n                if (obj.length === 3) {\r\n                    state.woodCuttingMastery[obj[1].id - 1].masteryExp += state.woodCuttingMastery[obj[1].id - 1].mastery * 2\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\nexport const { addExperience, addMastery} = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}