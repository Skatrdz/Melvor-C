{"ast":null,"code":"import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { createSlice, current } from '@reduxjs/toolkit';\nimport xpTable from \"../willBeAppi/xpTable\";\nimport profInfo from \"../willBeAppi/profInfo\";\nimport WoodBlockReqTemp from \"../willBeAppi/WoodBlockReq(temp)\";\nconst initialState = {\n  skills: profInfo,\n  woodCuttingMastery: WoodBlockReqTemp\n};\nfunction masteryLvl(currentExp, Exp, Lvl) {\n  return currentExp + Exp < xpTable[Lvl].exp;\n}\nexport const expSlice = createSlice({\n  name: \"exp\",\n  initialState,\n  reducers: {\n    addExperience: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      console.log(10, obj);\n      const skillId = 1; // PLACEHOLDER\n      let exp = obj[2] ? obj[2].exp : obj[0].exp;\n      if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\n        state.skills[skillId - 1].exp += exp;\n      } else {\n        state.skills[skillId - 1].currentLvl += 1;\n        state.skills[skillId - 1].exp += exp;\n      }\n    },\n    addMastery: (state, action) => {\n      const {\n        obj\n      } = action.payload;\n      const skillId = 1; // PLACEHOLDER\n      if (obj.length === 3) {\n        const obj2 = state.woodCuttingMastery[obj[1].id - 1];\n        const currentExp2 = obj2.masteryExp;\n        const masteryLvl2 = obj2.mastery;\n        const expGain2 = state.woodCuttingMastery[obj[1].id - 1].mastery * 10;\n        state.skills[0].masteryExp += expGain2 * 4;\n        if (masteryLvl(currentExp2, expGain2, masteryLvl2)) {\n          state.woodCuttingMastery[obj[1].id - 1].masteryExp += expGain2;\n        } else {\n          state.woodCuttingMastery[obj[1].id - 1].mastery += 1;\n          state.woodCuttingMastery[obj[1].id - 1].masteryExp += expGain2;\n        }\n      }\n      const obj1 = state.woodCuttingMastery[obj[0].id - 1];\n      const currentExp1 = obj1.masteryExp;\n      const masteryLvl1 = obj1.mastery;\n      const expGain = state.woodCuttingMastery[obj[0].id - 1].mastery * 10;\n      state.skills[0].masteryExp += expGain * 4;\n      if (masteryLvl(currentExp1, expGain, masteryLvl1)) {\n        state.woodCuttingMastery[obj[0].id - 1].masteryExp += expGain;\n      } else {\n        state.woodCuttingMastery[obj[0].id - 1].mastery += 1;\n        state.woodCuttingMastery[obj[0].id - 1].masteryExp += expGain;\n      }\n    }\n  }\n});\nexport const {\n  addExperience,\n  addMastery\n} = expSlice.actions;\nexport default expSlice.reducer;","map":{"version":3,"names":["createReducer","createAction","createSlice","current","xpTable","profInfo","WoodBlockReqTemp","initialState","skills","woodCuttingMastery","masteryLvl","currentExp","Exp","Lvl","exp","expSlice","name","reducers","addExperience","state","action","obj","payload","console","log","skillId","currentLvl","addMastery","length","obj2","id","currentExp2","masteryExp","masteryLvl2","mastery","expGain2","obj1","currentExp1","masteryLvl1","expGain","actions","reducer"],"sources":["C:/Users/Name/WebstormProjects/untitled/my-app/src/store/expReducer.js"],"sourcesContent":["\r\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\r\nimport { createSlice, current  } from '@reduxjs/toolkit'\r\nimport xpTable from \"../willBeAppi/xpTable\";\r\nimport profInfo from \"../willBeAppi/profInfo\";\r\nimport WoodBlockReqTemp from \"../willBeAppi/WoodBlockReq(temp)\";\r\nconst initialState = {\r\n    skills: profInfo,\r\n    woodCuttingMastery: WoodBlockReqTemp\r\n};\r\n\r\nfunction masteryLvl(currentExp, Exp, Lvl) {\r\n\r\n    return currentExp + Exp < xpTable[Lvl].exp;\r\n}\r\n\r\n\r\n    export const expSlice = createSlice({\r\n        name: \"exp\",\r\n        initialState,\r\n        reducers: {\r\n            addExperience: (state, action) => {\r\n                const {obj} = action.payload;\r\n                console.log(10, obj)\r\n                const skillId = 1 // PLACEHOLDER\r\n                let exp = obj[2] ? obj[2].exp : obj[0].exp;\r\n                if (state.skills[skillId - 1].exp + exp < xpTable[state.skills[skillId - 1].currentLvl - 1].exp) {\r\n                    state.skills[skillId - 1].exp += exp\r\n                } else {\r\n                    state.skills[skillId - 1].currentLvl += 1\r\n                    state.skills[skillId - 1].exp += exp\r\n                }\r\n            },\r\n            addMastery: (state, action) => {\r\n                const {obj} = action.payload;\r\n                const skillId = 1 // PLACEHOLDER\r\n                if (obj.length === 3){\r\n                    const obj2 = state.woodCuttingMastery[obj[1].id - 1]\r\n                    const currentExp2 = obj2.masteryExp\r\n                    const masteryLvl2 = obj2.mastery\r\n                    const expGain2 = state.woodCuttingMastery[obj[1].id - 1].mastery * 10\r\n                    state.skills[0].masteryExp += expGain2 * 4\r\n                    if (masteryLvl(currentExp2, expGain2, masteryLvl2)){\r\n                        state.woodCuttingMastery[obj[1].id - 1].masteryExp += expGain2\r\n                    }\r\n                    else {\r\n                        state.woodCuttingMastery[obj[1].id - 1].mastery += 1\r\n                        state.woodCuttingMastery[obj[1].id - 1].masteryExp += expGain2\r\n                    }\r\n                }\r\n                const obj1 = state.woodCuttingMastery[obj[0].id - 1]\r\n                const currentExp1 = obj1.masteryExp\r\n                const masteryLvl1 = obj1.mastery\r\n                const expGain = state.woodCuttingMastery[obj[0].id - 1].mastery * 10\r\n                state.skills[0].masteryExp += expGain * 4\r\n                if (masteryLvl(currentExp1, expGain, masteryLvl1)){\r\n                    state.woodCuttingMastery[obj[0].id - 1].masteryExp += expGain\r\n                }\r\n                else {\r\n                    state.woodCuttingMastery[obj[0].id - 1].mastery += 1\r\n                    state.woodCuttingMastery[obj[0].id - 1].masteryExp += expGain\r\n                }\r\n            },\r\n\r\n        }\r\n\r\n    });\r\n\r\nexport const { addExperience, addMastery} = expSlice.actions\r\nexport default expSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}